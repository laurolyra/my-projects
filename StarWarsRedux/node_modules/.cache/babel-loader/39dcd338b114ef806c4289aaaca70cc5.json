{"ast":null,"code":"var _jsxFileName = \"/home/lauro/MeusProjetos/my-projects/StarWarsRedux/src/components/Table.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { thunkPlanets, filterText } from '../actions/APIactions';\nimport { eraseFilter } from '../actions/dropdownActions';\nimport { sortColumn, changeOrder } from '../actions/sortActions';\nimport Dropdowns from './Dropdowns';\nimport './Table.css';\n\nclass Table extends Component {\n  static numericFilters(array, {\n    numericValues\n  }) {\n    const column = numericValues.column,\n          comparison = numericValues.comparison,\n          value = numericValues.value;\n    const columnValue = column !== '' && value !== '';\n\n    if (comparison === 'more than' && columnValue) {\n      return array.filter(planet => planet[column] > value);\n    }\n\n    if (comparison === 'less than' && columnValue) {\n      return array.filter(planet => planet[column] < value);\n    }\n\n    if (comparison === 'equal to' && columnValue) {\n      return array.filter(planet => planet[column] === value);\n    }\n\n    return array;\n  }\n\n  static generateBody(data, text, filters) {\n    console.log(data);\n    let firstFilter = data;\n    filters.forEach(x => {\n      firstFilter = Table.numericFilters(firstFilter, x);\n    });\n    return firstFilter.filter(({\n      name\n    }) => name.toLowerCase().includes(text.toLowerCase())).map(values => React.createElement(\"tbody\", {\n      key: values.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, Object.values(values).map((box, index) => index !== 9 ? React.createElement(\"td\", {\n      className: \"tableData\",\n      key: box,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, box) : null))));\n  }\n\n  static generateTable(loadInfo, data, failLoad, filtered, text, filters) {\n    if (!loadInfo && data) {\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, Object.keys(data[0]).map(item => item !== 'residents' ? React.createElement(\"th\", {\n        className: \"tableHeader\",\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, item) : null))), !filtered ? Table.generateBody(data, text, filters) : Table.generateBody(filtered, text, filters));\n    }\n\n    if (failLoad) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, failLoad);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  static sortStrings(data, column, order) {\n    if (order === 'ASC') {\n      data.sort((a, b) => a[column] < b[column] ? 1 : -1);\n    }\n\n    if (order === 'DESC') {\n      data.sort((a, b) => a[column] > b[column] ? 1 : -1);\n    }\n  }\n\n  static sortNumbers(data, column, order) {\n    if (order === 'ASC') {\n      data.sort((a, b) => parseInt(a[column], 10) < parseInt(b[column], 10) ? 1 : -1);\n    }\n\n    if (order === 'DESC') {\n      data.sort((a, b) => parseInt(a[column], 10) > parseInt(b[column], 10) ? 1 : -1);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.showFilters = this.showFilters.bind(this);\n  }\n\n  componentDidMount() {\n    const importedThunk = this.props.importedThunk;\n    importedThunk();\n  }\n\n  onChangeHandler(event) {\n    const filterByText = this.props.filterByText;\n    let data = this.props.data;\n    const text = event.target.value.toLowerCase();\n    filterByText(text, data);\n    data = filterByText(text, data).results;\n  }\n\n  showFilters(filters) {\n    const eraseColumn = this.props.eraseColumn;\n    return filters[0].numericValues.column && filters.map(({\n      numericValues\n    }) => React.createElement(\"div\", {\n      className: \"filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      key: numericValues.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, numericValues.column), React.createElement(\"p\", {\n      key: numericValues.comparison,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, numericValues.comparison), React.createElement(\"p\", {\n      key: numericValues.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, numericValues.value), React.createElement(\"button\", {\n      type: \"button\",\n      value: numericValues.column,\n      onClick: () => eraseColumn(filters, numericValues.column),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"X\")));\n  }\n\n  changeOrderandState(e) {\n    const _this$props = this.props,\n          importchangeOrder = _this$props.importchangeOrder,\n          sFilters = _this$props.sFilters,\n          data = _this$props.data;\n    const _sFilters$ = sFilters[0],\n          column = _sFilters$.column,\n          order = _sFilters$.order;\n    const arrayStrings = ['name', 'climate', 'gravity', 'terrain', 'films', 'url'];\n\n    if (arrayStrings.some(param => param === column)) {\n      Table.sortStrings(data, column, order);\n    } else {\n      Table.sortNumbers(data, column, order);\n    }\n\n    importchangeOrder(e);\n    return data;\n  }\n\n  changeOrder(data) {\n    const _this$props2 = this.props,\n          importSortColumn = _this$props2.importSortColumn,\n          sFilters = _this$props2.sFilters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onClick: e => importSortColumn(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, Object.keys(data[0]).map(item => React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, item))), React.createElement(\"button\", {\n      type: \"button\",\n      value: sFilters[0].order === 'ASC' ? 'DESC' : 'ASC',\n      onClick: e => this.changeOrderandState(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, sFilters[0].order === 'ASC' ? 'Descending' : 'Ascending'));\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          loading = _this$props3.loading,\n          data = _this$props3.data,\n          error = _this$props3.error,\n          filtered = _this$props3.filtered,\n          textFilter = _this$props3.textFilter,\n          filters = _this$props3.filters,\n          sFilters = _this$props3.sFilters;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Star Wars - A New Saga begins!\"), React.createElement(\"input\", {\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Dropdowns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), data === null ? null : this.changeOrder(data), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Filters:\"), React.createElement(\"div\", {\n      className: \"filterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.showFilters(filters)), Table.generateTable(loading, data, error, filtered, textFilter[0].name, filters, sFilters));\n  }\n\n}\n\nconst mapStateToProps = ({\n  APIreducer: {\n    loading,\n    data,\n    error\n  },\n  textReducer: {\n    filtered,\n    filters: textFilter\n  },\n  dropdownReducer: {\n    filters\n  },\n  sortReducer: {\n    filters: sFilters\n  }\n}) => ({\n  loading,\n  data,\n  error,\n  filtered,\n  textFilter,\n  filters,\n  sFilters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  importedThunk: () => dispatch(thunkPlanets()),\n  filterByText: (typing, data) => dispatch(filterText(typing, data)),\n  eraseColumn: (array, column) => dispatch(eraseFilter(array, column)),\n  importSortColumn: column => dispatch(sortColumn(column)),\n  importchangeOrder: order => dispatch(changeOrder(order))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\nTable.propTypes = {\n  importedThunk: propTypes.func.isRequired,\n  filterByText: propTypes.func.isRequired,\n  loading: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string,\n  filtered: propTypes.arrayOf(propTypes.object),\n  textFilter: propTypes.arrayOf(propTypes.object),\n  filters: propTypes.arrayOf(propTypes.object),\n  eraseColumn: propTypes.func.isRequired,\n  importSortColumn: propTypes.func.isRequired,\n  importchangeOrder: propTypes.func.isRequired,\n  sFilters: propTypes.arrayOf(propTypes.object)\n};\nTable.defaultProps = {\n  data: null,\n  error: null,\n  filtered: null,\n  textFilter: '',\n  filters: '',\n  sFilters: ''\n};","map":{"version":3,"sources":["/home/lauro/MeusProjetos/my-projects/StarWarsRedux/src/components/Table.js"],"names":["React","Component","propTypes","connect","thunkPlanets","filterText","eraseFilter","sortColumn","changeOrder","Dropdowns","Table","numericFilters","array","numericValues","column","comparison","value","columnValue","filter","planet","generateBody","data","text","filters","console","log","firstFilter","forEach","x","name","toLowerCase","includes","map","values","Object","box","index","generateTable","loadInfo","failLoad","filtered","keys","item","sortStrings","order","sort","a","b","sortNumbers","parseInt","constructor","props","onChangeHandler","bind","showFilters","componentDidMount","importedThunk","event","filterByText","target","results","eraseColumn","changeOrderandState","e","importchangeOrder","sFilters","arrayStrings","some","param","importSortColumn","render","loading","error","textFilter","mapStateToProps","APIreducer","textReducer","dropdownReducer","sortReducer","mapDispatchToProps","dispatch","typing","func","isRequired","bool","arrayOf","object","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { thunkPlanets, filterText } from '../actions/APIactions';\nimport { eraseFilter } from '../actions/dropdownActions';\nimport { sortColumn, changeOrder } from '../actions/sortActions';\nimport Dropdowns from './Dropdowns';\nimport './Table.css';\n\nclass Table extends Component {\n  static numericFilters(array, { numericValues }) {\n    const { column, comparison, value } = numericValues;\n    const columnValue = (column !== '' && value !== '');\n    if (comparison === 'more than' && columnValue) {\n      return array.filter((planet) => planet[column] > value);\n    }\n    if (comparison === 'less than' && columnValue) {\n      return array.filter((planet) => planet[column] < value);\n    }\n    if (comparison === 'equal to' && columnValue) {\n      return array.filter((planet) => planet[column] === value);\n    }\n    return array;\n  }\n\n  static generateBody(data, text, filters) {\n    console.log(data);\n    let firstFilter = data;\n    filters.forEach((x) => { firstFilter = Table.numericFilters(firstFilter, x); });\n    return (\n      firstFilter\n        .filter(({ name }) => name.toLowerCase().includes(text.toLowerCase()))\n        .map((values) => (\n          <tbody key={values.name}>\n            <tr>\n              {Object.values(values).map((box, index) => (index !== 9\n                ? <td className=\"tableData\" key={box}>{box}</td>\n                : null))}\n            </tr>\n          </tbody>\n        )));\n  }\n\n  static generateTable(loadInfo, data, failLoad, filtered, text, filters) {\n    if (!loadInfo && data) {\n      return (\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(data[0]).map((item) => (item !== 'residents'\n                ? <th className=\"tableHeader\" key={item}>{item}</th>\n                : null))}\n            </tr>\n          </thead>\n          {!filtered\n            ? Table.generateBody(data, text, filters)\n            : Table.generateBody(filtered, text, filters)}\n        </table>\n      );\n    }\n    if (failLoad) { return <div>{failLoad}</div>; }\n    return <div>Loading...</div>;\n  }\n\n  static sortStrings(data, column, order) {\n    if (order === 'ASC') {\n      data.sort((a, b) => (a[column] < b[column] ? 1 : -1));\n    }\n    if ((order === 'DESC')) {\n      data.sort((a, b) => (a[column] > b[column] ? 1 : -1));\n    }\n  }\n\n  static sortNumbers(data, column, order) {\n    if (order === 'ASC') {\n      data.sort((a, b) => (parseInt(a[column], 10) < parseInt(b[column], 10) ? 1 : -1));\n    }\n    if ((order === 'DESC')) {\n      data.sort((a, b) => (parseInt(a[column], 10) > parseInt(b[column], 10) ? 1 : -1));\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.showFilters = this.showFilters.bind(this);\n  }\n\n  componentDidMount() {\n    const { importedThunk } = this.props;\n    importedThunk();\n  }\n\n  onChangeHandler(event) {\n    const { filterByText } = this.props;\n    let { data } = this.props;\n    const text = event.target.value.toLowerCase();\n    filterByText(text, data);\n    data = filterByText(text, data).results;\n  }\n\n  showFilters(filters) {\n    const { eraseColumn } = this.props;\n    return filters[0].numericValues.column && filters\n      .map(({ numericValues }) => (\n        <div className=\"filters\">\n          <p key={numericValues.column}>{numericValues.column}</p>\n          <p key={numericValues.comparison}>{numericValues.comparison}</p>\n          <p key={numericValues.value}>{numericValues.value}</p>\n          <button\n            type=\"button\"\n            value={numericValues.column}\n            onClick={() => eraseColumn(filters, numericValues.column)}\n          >\n            X\n          </button>\n        </div>\n      ));\n  }\n\n  changeOrderandState(e) {\n    const { importchangeOrder, sFilters, data } = this.props;\n    const { column, order } = sFilters[0];\n    const arrayStrings = ['name', 'climate', 'gravity', 'terrain', 'films', 'url'];\n    if (arrayStrings.some((param) => param === column)) {\n      Table.sortStrings(data, column, order);\n    } else {\n      Table.sortNumbers(data, column, order);\n    }\n    importchangeOrder(e);\n    return data;\n  }\n\n  changeOrder(data) {\n    const { importSortColumn, sFilters } = this.props;\n    return (\n      <div>\n        <select onClick={(e) => importSortColumn(e.target.value)}>\n          {Object.keys(data[0])\n            .map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n        </select>\n        <button type=\"button\" value={sFilters[0].order === 'ASC' ? 'DESC' : 'ASC'} onClick={(e) => this.changeOrderandState(e.target.value)}>{sFilters[0].order === 'ASC' ? 'Descending' : 'Ascending'}</button>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      data,\n      error,\n      filtered,\n      textFilter,\n      filters,\n      sFilters,\n    } = this.props;\n    return (\n      <div>\n        <h1>Star Wars - A New Saga begins!</h1>\n        <input onChange={this.onChangeHandler} />\n        <Dropdowns />\n        {data === null ? null : this.changeOrder(data)}\n        <h2>Filters:</h2>\n        <div className=\"filterContainer\">\n          {this.showFilters(filters)}\n        </div>\n        {Table.generateTable(loading, data, error, filtered, textFilter[0].name, filters, sFilters)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  APIreducer: {\n    loading,\n    data,\n    error,\n  },\n  textReducer: {\n    filtered,\n    filters: textFilter,\n  },\n  dropdownReducer: {\n    filters,\n  },\n  sortReducer: {\n    filters: sFilters,\n  },\n}) => ({\n  loading, data, error, filtered, textFilter, filters, sFilters,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  importedThunk: () => dispatch(thunkPlanets()),\n  filterByText: (typing, data) => dispatch(filterText(typing, data)),\n  eraseColumn: (array, column) => dispatch(eraseFilter(array, column)),\n  importSortColumn: (column) => dispatch(sortColumn(column)),\n  importchangeOrder: (order) => dispatch(changeOrder(order)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  importedThunk: propTypes.func.isRequired,\n  filterByText: propTypes.func.isRequired,\n  loading: propTypes.bool.isRequired,\n  data: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string,\n  filtered: propTypes.arrayOf(propTypes.object),\n  textFilter: propTypes.arrayOf(propTypes.object),\n  filters: propTypes.arrayOf(propTypes.object),\n  eraseColumn: propTypes.func.isRequired,\n  importSortColumn: propTypes.func.isRequired,\n  importchangeOrder: propTypes.func.isRequired,\n  sFilters: propTypes.arrayOf(propTypes.object),\n};\n\nTable.defaultProps = {\n  data: null,\n  error: null,\n  filtered: null,\n  textFilter: '',\n  filters: '',\n  sFilters: '',\n};\n"]},"metadata":{},"sourceType":"module"}