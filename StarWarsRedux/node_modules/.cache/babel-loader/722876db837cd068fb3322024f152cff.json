{"ast":null,"code":"import _objectSpread from \"/home/lauro/MeusProjetos/my-projects/StarWarsRedux/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GENERATE_FILTER, ERASE_FILTER } from '../actions/dropdownActions';\nconst initialFilter = {\n  filters: [{\n    numericValues: {\n      column: '',\n      comparison: '',\n      value: ''\n    }\n  }],\n  columns: ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']\n};\n\nconst dropdownReducer = (state = initialFilter, action) => {\n  switch (action.type) {\n    case GENERATE_FILTER:\n      {\n        return _objectSpread({}, state, {\n          filters: state.filters[0].numericValues.column === '' ? [action.newNumericValues] : state.filters.concat(action.newNumericValues),\n          columns: state.columns.filter(criteria => criteria !== action.newNumericValues.numericValues.column)\n        });\n      }\n\n    case ERASE_FILTER:\n      {\n        return {\n          columns: [...state.columns, action.column],\n          filters: action.array.length === 0 ? [initialFilter.filters[0]] : action.array\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default dropdownReducer;","map":{"version":3,"sources":["/home/lauro/MeusProjetos/my-projects/StarWarsRedux/src/reducers/dropdownReducer.js"],"names":["GENERATE_FILTER","ERASE_FILTER","initialFilter","filters","numericValues","column","comparison","value","columns","dropdownReducer","state","action","type","newNumericValues","concat","filter","criteria","array","length"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,YAA1B,QAA8C,4BAA9C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,CAAC;AACRC,IAAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAE,EADK;AAEbC,MAAAA,UAAU,EAAE,EAFC;AAGbC,MAAAA,KAAK,EAAE;AAHM;AADP,GAAD,CADW;AASpBC,EAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,UAAjC,EAA6C,iBAA7C,EAAgE,eAAhE;AATW,CAAtB;;AAYA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,eAAL;AAAsB;AACpB,iCACKU,KADL;AAEEP,UAAAA,OAAO,EACLO,KAAK,CAACP,OAAN,CAAc,CAAd,EAAiBC,aAAjB,CAA+BC,MAA/B,KAA0C,EAA1C,GACI,CAACM,MAAM,CAACE,gBAAR,CADJ,GAEIH,KAAK,CAACP,OAAN,CAAcW,MAAd,CAAqBH,MAAM,CAACE,gBAA5B,CALR;AAMEL,UAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CACNO,MADM,CACEC,QAAD,IAAcA,QAAQ,KAAKL,MAAM,CAACE,gBAAP,CAAwBT,aAAxB,CAAsCC,MADlE;AANX;AASD;;AACD,SAAKJ,YAAL;AAAmB;AACjB,eAAO;AACLO,UAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACN,MAA1B,CADJ;AAELF,UAAAA,OAAO,EAAEQ,MAAM,CAACM,KAAP,CAAaC,MAAb,KAAwB,CAAxB,GAA4B,CAAChB,aAAa,CAACC,OAAd,CAAsB,CAAtB,CAAD,CAA5B,GAAyDQ,MAAM,CAACM;AAFpE,SAAP;AAID;;AACD;AAAS,aAAOP,KAAP;AAlBX;AAoBD,CArBD;;AAuBA,eAAeD,eAAf","sourcesContent":["import { GENERATE_FILTER, ERASE_FILTER } from '../actions/dropdownActions';\n\nconst initialFilter = {\n  filters: [{\n    numericValues: {\n      column: '',\n      comparison: '',\n      value: '',\n    },\n  },\n  ],\n  columns: ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'],\n};\n\nconst dropdownReducer = (state = initialFilter, action) => {\n  switch (action.type) {\n    case GENERATE_FILTER: {\n      return {\n        ...state,\n        filters:\n          state.filters[0].numericValues.column === ''\n            ? [action.newNumericValues]\n            : state.filters.concat(action.newNumericValues),\n        columns: state.columns\n          .filter((criteria) => criteria !== action.newNumericValues.numericValues.column),\n      };\n    }\n    case ERASE_FILTER: {\n      return {\n        columns: [...state.columns, action.column],\n        filters: action.array.length === 0 ? [initialFilter.filters[0]] : action.array,\n      };\n    }\n    default: return state;\n  }\n};\n\nexport default dropdownReducer;\n"]},"metadata":{},"sourceType":"module"}